from aiogram import Router, types, F
from aiogram.filters import Command
from keyboards import keyboard
from database import db
import os
import aiohttp  # –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
from aiogram import Bot  # –µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Ç–∏–ø Bot
from aiogram.types import FSInputFile
from utils import check_available_configs
import logging
logger = logging.getLogger(__name__)

AUTH_CODE = os.getenv("AUTH_CODE")
urlupdate = "http://fastapi:8080/giveconfig"  # –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–¥—Ä–µ—Å API

router = Router()

@router.message(Command('start'))
async def start_command(message: types.Message):
    args = message.text.split()
    user_id = message.from_user.id
    referral_bonus_message: str | None = None
    logger.info(f"/start received from {user_id} with args={args}")
    if len(args) > 1:
        referral_code = args[1]

        owner_tg_id = await db.get_tg_id_by_referral_code(referral_code)
        if owner_tg_id is None:
            return await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–≤–æ–π –∫–æ–¥
        if owner_tg_id == str(user_id):
            return await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É!")

        is_new_user = await db.is_first_time_user(user_id)

        if is_new_user:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (—Ä–µ—Ñ–µ—Ä—Ä–∞–ª–æ–º –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å—Å—ã–ª–∫–∏)
            bonus_eligible = await db.add_referral_by(user_id, referral_code)
            if bonus_eligible:
                # –ù–∞—á–∏—Å–ª—è–µ–º +3 –¥–Ω—è –Ω–∞ –±–∞–ª–∞–Ω—Å –≤–ª–∞–¥–µ–ª—å—Ü—É –∫–æ–¥–∞
                try:
                    await db.add_balance_days(str(owner_tg_id), 3)
                    await message.bot.send_message(
                        int(owner_tg_id),
                        "–ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –¥–Ω—è. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –¥–Ω–∏ –≤ –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."
                    )
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
                    referral_bonus_message = (
                        "–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ ‚Äî –µ—ë –≤–ª–∞–¥–µ–ª–µ—Ü –ø–æ–ª—É—á–∏–ª 3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏."
                    )
                except Exception:
                    logger.exception("Failed to process referral bonus for owner_tg_id=%s", owner_tg_id)
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Ä–∞–Ω–µ–µ
            await message.answer("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Ä–∞–Ω–µ–µ. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.")

    start_caption = (
        "‚ö° –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ GLS VPN.\n"
        "–ü–æ–º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –≥—Ä–∞–Ω–∏—Ü.\n\n"
        "üîì –û–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ DPI\n"
        "üöÄ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å\n"
        "üì± iOS / Android / Windows / macOS\n\n"
        "üß™ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 3 –¥–Ω—è.\n\n"
        "–í—Å—ë –ø—Ä–æ—Å—Ç–æ: –≤—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ, –æ–ø–ª–∞—Ç–∏ –≤ Telegram –∏ –ø–æ–¥–∫–ª—é—á–∞–π—Å—è!"
        "\n\n –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ–±—Ö–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ë–∏–ª–∞–π–Ω–µ, –ú–µ–≥–∞—Ñ–æ–Ω–µ –∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞. –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN."
        "\n –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."

    )

    try:
        # –ò—â–µ–º start.jpg –ª–æ–∫–∞–ª—å–Ω–æ –±–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        routes_dir = os.path.dirname(__file__)
        bot_root = os.path.abspath(os.path.join(routes_dir, ".."))
        project_root = os.path.abspath(os.path.join(routes_dir, "..", ".."))
        candidate_paths = [
            os.path.join(project_root, "start.jpg"),
            os.path.join(bot_root, "start.jpg"),
            os.path.join(os.getcwd(), "start.jpg"),
        ]

        image_path_found = next((p for p in candidate_paths if os.path.exists(p)), None)
        if image_path_found:
            await message.answer_photo(photo=FSInputFile(image_path_found), caption=start_caption, reply_markup=keyboard.create_keyboard())
        else:
            await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard.create_keyboard())
    except Exception:
        # –§–æ–ª–±—ç–∫ –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard.create_keyboard())

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º –±–æ–Ω—É—Å–µ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if referral_bonus_message:
        await message.answer(referral_bonus_message)



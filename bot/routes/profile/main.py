"""
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
"""

import os
from aiogram import Router, F, types
from keyboards import keyboard
from keyboards.ui_labels import BTN_PROFILE

router = Router()

# –ß–∏—Ç–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–µ–ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ env-–∫–ª—é—á–µ–π
def _env_any(*keys: str, default: str = "") -> str:
    for key in keys:
        value = os.getenv(key)
        if value:
            return value
    return default

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –æ—Å–Ω–æ–≤–Ω–æ–π ‚Äî –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞
@router.message(F.text.in_({"–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", BTN_PROFILE}))
async def my_account(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–æ–¥–º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
    await message.answer("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:", reply_markup=keyboard.create_profile_keyboard())

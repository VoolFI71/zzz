from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging

logger = logging.getLogger(__name__)

router = Router()

def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return user_id == 746560409

@router.callback_query(F.data == "admin_revenue")
async def show_revenue(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—É–º–º–∞—Ä–Ω—ã–µ –∞–≥—Ä–µ–≥–∞—Ç—ã –æ–ø–ª–∞—Ç: —Ä—É–±–ª–∏ –∏ –∑–≤—ë–∑–¥—ã."""
    if not is_admin(callback.from_user.id):
        await callback.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    try:
        from database import db as _db
        aggr = await _db.get_payments_aggregates()
        total_rub = aggr.get("total_rub", 0)
        total_stars = aggr.get("total_stars", 0)
        count_rub = aggr.get("count_rub", 0)
        count_stars = aggr.get("count_stars", 0)

        text = (
            "üíµ –î–æ—Ö–æ–¥ —Å–µ—Ä–≤–∏—Å–∞\n\n"
            f"–†—É–±–ª–∏: {total_rub} ‚ÇΩ (–ø–ª–∞—Ç–µ–∂–µ–π: {count_rub})\n"
            f"–ó–≤—ë–∑–¥—ã: {total_stars} ‚≠ê (–ø–ª–∞—Ç–µ–∂–µ–π: {count_stars})\n\n"
            "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Å—É–º–º—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Ü–µ–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç –æ–ø–ª–∞—Ç—ã."
        )
        await callback.message.edit_text(text)
    except Exception as e:
        logger.error(f"Error showing revenue: {e}")
        await callback.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Ö–æ–¥–µ")
    await callback.answer()

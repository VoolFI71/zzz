version: '3.8'

services:

  # nginx-proxy:
  #   image: nginxproxy/nginx-proxy:latest
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - nginx_certs:/etc/nginx/certs
  #     - ./nginx/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx/html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   restart: unless-stopped

  # acme-companion:
  #   image: nginxproxy/acme-companion:latest
  #   container_name: acme-companion
  #   depends_on:
  #     - nginx-proxy
  #   environment:
  #     - DEFAULT_EMAIL=gleb.gleb.tula@mail.ru
  #     - NGINX_PROXY_CONTAINER=nginx-proxy
  #   volumes:
  #     - nginx_certs:/etc/nginx/certs
  #     - ./nginx/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx/html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - acme:/etc/acme.sh
  #   restart: unless-stopped
  telegram-bot:
    build:
      context: ./bot
      dockerfile: dockerfile
    restart: always
    env_file:
      - ./bot/.env
    volumes:
      - ./bot:/app


  fastapi:
    build:
      context: ./main
      dockerfile: dockerfile
    restart: always
    env_file:
      - ./main/.env
    # Redis removed; no rate limiting env needed
    # environment:
    #   - VIRTUAL_HOST=swaga.space,www.swaga.space
    #   - LETSENCRYPT_HOST=swaga.space,www.swaga.space
    #   - VIRTUAL_PORT=8080
    volumes:
      - ./main:/app
    # expose:
    #   - "8080"
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8080/healthz').getcode()==200 else sys.exit(1)\"" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  backup:
    build:
      context: ./backup
      dockerfile: dockerfile
    volumes:
      - ./bot:/app/bot
      - ./main:/app/main
      - ./backup:/app/backup    
      - ./backups:/app/backups    

# volumes:
#   nginx_certs:
#   acme:

